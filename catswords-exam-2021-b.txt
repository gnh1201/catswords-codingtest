2021년 하반기 캐츠워즈 전문가 인증 문제지


문제 1. 3차원 구 증명하기

[문제 설명]
3차원 공간 안에 [x, y, z]로 표현되는 점이 무수히 많이 있다.
(단, x >= -100, x <= 100, y >= -100, y <= 100, z >= -100, z <= 100)

점 [10, 10, 10]을 중점으로 하는 반지름이 10인 3차원 구가 있다.
임의의 점 [a, b, c]를 찍었을 때, 이 점이 3차원 구 밖에 있는지 안에 있는지 검증하시오.
(단, 구의 표면에 찍힌 임의의 점은 3차원 구 안에 있는 것으로 본다.)

임의의 점 [a, b, c]가 3차원 구 밖에 있는 경우 0, 3차원 구 안에 있는 경우 1을 리턴하시오.

[참고 / 제약 사항]
x >= -100, x <= 100, y >= -100, y <= 100, z >= -100, z <= 100
구의 표면에 찍힌 임의의 점은 3차원 구 안에 있는 것으로 본다.

[테스트 케이스]
a = 10
b = 10
c = 10   리턴(정답): 1
중점이므로 구 안에 있다.

a = 20
b = 20
c = 20   리턴(정답): 0
정육면체가 아니므로 구 안에 있을 수 없는 점이다.

a = 5
b = 5
c = 5   리턴(정답): 1
구의 모양에 따라서 해당 점은 안에 있어야 한다.
문제 2. 트리 조상 증명

[문제 설명]
아래와 같은 트리 형태의 그래프가 있으며, 노드가 A부터 O까지 있다.
각 노드에는 고유번호가 1부터 매겨져 있다.

A = 1
B = 2
...
0 = 15



각 노드의 데이터는 (현재노드번호, 조상노드번호)로 표현한다. 가령, O의 조상은 J이므로 (15, 10)로 표현된다.

입력으로 두 개의 임의 노드번호가 주어졌을 때, 서로 조상 및 후손의 관계인지 검증하는 코드를 작성하시오.

조상 및 후손의 관계가 있으면 1, 없으면 0을 리턴하시오.

[참고 / 제약 사항]
조상 및 후손의 관계가 있으면 1
조상 및 후손의 관계가 없으면 0

[테스트 케이스]
1)   input1 = 15
     input2 = 10   리턴(정답): 1

2)   input1 = 13
     input2 = 8   리턴(정답): 1

3)   input1 = 10
     input2 = 15   리턴(정답): 0

4)   input1 = 8
     input2 = 13   리턴(정답): 0



문제 3. 대체 텍스트

[문제 내용]
아래는 '한국형 웹 콘텐츠 접근성 지침(K-WCAG) 2.1'의 내용 중 일부이다.

5.1.1. (적절한 대체 텍스트 제공) 텍스트 아닌 콘텐츠는 그 의미나 용도를 인식할 수 있도록 대체 텍스트를 제공해야 한다.

해당 내용과 관련이 있는 HTML5 태그와 속성을 올바르게 연결하지 않은 것을 고르시오.

[객관식 정답]
   1) img – alt
   2) figure – figcaption
   3) iframe – title
   4) a – href
   5) table – caption


문제 4. 뇌전증

[문제 내용]
아래는 2019년 12월 18일 '트위터 통한 새로운 공격, 뇌전증 환자 발작 유발하기 - 보안뉴스'에서 발췌한 글이다.


뇌전증 재단(Epilepsy Foundation)이 익명의 트위터 사용자들 다수를 고소했다. 이들이 뇌전증 재단 공식 트위터 피드에 강력한 빛이 번쩍이거나 스트로빙 효과가 추가된 이미지 등 환자들의 발작을 유발할 수 있는 콘텐츠를 잔뜩 올렸다고 한다.

이는 소셜 미디어를 통해 발생하는 새로운 유형의 사이버 공격이다. 그러면서도 물리적인 피해를 입힐 수 있다는 특징을 가지고 있다. 뇌전증 환자의 3%는 특정 강도의 빛이 눈 앞에서 반짝 빛날 때나 특정 시각 패턴에 노출되었을 때 발작을 일으킬 수 있다고 한다. “발작은 때로 큰 위험을 초래합니다.” 재단 측의 설명이다.


여기에 해당하는 증후군의 이름을 입력하시오 (4글자, 또는 4글자 아니여도 동의어 허용)

[주관식 정답]
(                                )





문제 5. 프로그래밍 언어론 – 어떤 값

[문제 내용]
아래 프로그래밍 언어 및 프레임워크 예시에서 나타나는 공통적인 특징을 일컫는 용어를 1가지 이상 제시하시오. (단, 1개 이상 제시할 시 쉼표로 구분)
 
1. JAVA/Beans

public class User {
    private int id;
    private String name;
    public String getId() {
        return this.id;
    }
    public void setId(int id) {
        this.id = id;
    }
    public String getName() {
        return this.name;
    }
    public void setName(String name) {
        this.name = name;
    }
}


2. C#/.Net

public class User {
    public int Id { get; set; }
    public string Name { get; set; }
}


3. Javascript/React

const [count, setCount] = useState(0);



[주관식 정답]
(                                )

 


문제 6. 프로그래밍 언어론 – 닭과 달걀

[문제 내용]
아래는 컴파일러와 관련된 어떤 개념에 대한 설명 일부를 위키피디아에서 발췌한 것이다.


[닭이 먼저냐, 달걀이 먼저냐 문제]

만약 X 언어(X 언어로 작성될)를 위한 컴파일러를 얻을 필요가 있을 때 '어떻게 첫번째 컴파일러가 작성될 수 있는가'에 대한 문제가 생긴다. 이 닭이 먼저냐, 달걀이 먼저냐 문제를 해결하기 위해 현장에서 사용되는 각기 다른 방법들은 다음을 포함한다:

● 인터프리터 또는 Y 언어를 사용하여 X 언어를 위한 컴파일러를 작성한다. 니클라우스 워스(Niklaus Wirth)는 그가 첫 번째 파스칼 컴파일러를 포트란으로 작성했다고 밝혔다.
● X 언어를 위한 또다른 인터프리터 또는 컴파일러가 Y 언어로 작성되었다; 이는 스킴이 종종 (             )되는 방법이다.
● X 언어를 위한 컴파일러의 초창기 버전들은 컴파일러가 존재하는 X 언어의 일부만을 사용해서 작성되었다. 이는 JAVA, 하스켈, 초기 프리 파스칼을 포함하는 언어들의 컴파일러가 종종 (             )되는 방법이다.
● X 언어로 컴파일러를 만든 뒤, 직접 (주로 최적화가 부족한 방법으로) 컴파일한다. 그 다음 그 컴파일러를 다시 그 컴파일러의 코드에 적용하여 최적화된 컴파일러를 얻는다.


여기서 설명하는 개념의 이름 또는 파이선(Python) 언어에서 대표적인 프로젝트 이름 한가지를 제시하시오.


[주관식 정답]
(                                )
문제 7. 평평한 지구

[문제 내용]

지구에서 두 좌표 지점 사이의 거리를 일반적인 피타고라스 정리로 구하면 정확한 값을 얻을 수 없다. 지구는 평평하지 않고 둥글기 때문이다.

이 문제를 해결하기 위해 다양한 거리 계산법이 사용된다. 다음 중 이러한 거리 계산법으로 가장 적절하지 않은 것을 고르시오

[객관식 문제]
1) Haversine
2) Euclidean
3) Vincenty
4) Great Circle
5) Geodesic



문제 8. 프로그래밍 언어론 – 어떤 값 2

다음 제시된 어셈블리 코드가 무엇을 설명하고자 하는지 적절한 용어를 제시하시오.

A)
_MyFunction1:
push ebp
mov ebp, esp
mov eax, [ebp + 8]
mov edx, [ebp + 12]
add eax, edx
pop ebp
ret
...
push 3
push 2
call _MyFunction1
add esp, 8

B)
:_MyFunction2@8
push ebp
mov ebp, esp
mov eax, [ebp + 8]
mov edx, [ebp + 12]
add eax, edx
pop ebp
ret 8
...
push 3
push 2
call _MyFunction2@8

C)
:@MyFunction3@8
push ebp
mov ebp, esp ;many compilers create a stack frame even if it isn't used
add eax, edx ;a is in eax, b is in edx
pop ebp
ret

...
;the calling function
mov eax, 2
mov edx, 3
call @MyFunction3@8


[주관식 정답]
(                                )










수고하셨습니다.
